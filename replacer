#!/bin/bash

ROOT_FOLDER="."

MODULE_FOLDERS=($(find "$ROOT_FOLDER" -type d -path "*/main/res/values"))

# Calculate the total number of folders
TOTAL_FOLDERS=${#MODULE_FOLDERS[@]}

# Randomly decide the maximum number of folders to consider
# This adds variability, sometimes picking only a few folders
MAX_FOLDERS=$((RANDOM % TOTAL_FOLDERS / 2 + 1)) # Limit to a random fraction of the total

# Shuffle the list of MODULE_FOLDERS and pick a subset
SELECTED_FOLDERS=($(shuf -e "${MODULE_FOLDERS[@]}" -n $MAX_FOLDERS))

# Iterate over the selected folders
for RANDOM_MODULE in "${SELECTED_FOLDERS[@]}"; do
  # Get the strings.xml file in the selected module
  RANDOM_FILE="$RANDOM_MODULE/strings.xml"

  # Check if the strings.xml file exists
  if [ ! -f "$RANDOM_FILE" ]; then
    echo "No strings.xml file found in $RANDOM_MODULE. Skipping."
    continue
  fi

  # Generate a random update
  RANDOM_UPDATE=$(date +%s%N | sha256sum | base64 | head -c 32)
  RANDOM_FUNCTION="<string name=\"$RANDOM_UPDATE\">$RANDOM_UPDATE</string>"
  echo "Updating $RANDOM_FILE with $RANDOM_FUNCTION"

  # Read the content of the file
  file_content=$(<"$RANDOM_FILE")

  # Find the position of </resources>
  position=$(echo "$file_content" | awk '/<\/resources>/ {print FNR}')

  # Insert the new string before </resources>
  new_content=$(echo "$file_content" | awk -v pos="$position" -v str="$RANDOM_FUNCTION" 'NR == pos {print str} {print}')

  # Write the modified content back to the file
  echo "$new_content" > "$RANDOM_FILE"
done

echo "Update complete."
